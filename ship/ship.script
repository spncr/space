function init(self)
	msg.post(".", "acquire_input_focus")
	--msg.post("camera", "follow")
	
	self.rotation_direction = vmath.vector3(0, 0, 0)
	self.thrust = 0
	self.power = 6
	self.max_thrust = 1
	-- Add initialization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function final(self)
	msg.post(".", "release_input_focus")
end

function update(self, dt)
	local rotation = go.get_rotation()
	local world_position = go.get_world_position()

	local body = "#collisionobject"
	
	msg.post(body, "apply_force", { 
		force = vmath.rotate(rotation, self.rotation_direction), 
		position = world_position + vmath.rotate(rotation, vmath.vector3(-8, 8, 0)) 
	})
	
	msg.post(body, "apply_force", { 
		force = vmath.rotate(rotation, -self.rotation_direction), 
		position = world_position + vmath.rotate(rotation, vmath.vector3(8, -8, 0)) 
	})
	
	-- msg.post("#collisionobject", "apply_force", { 
	-- 	force = vmath.rotate(rotation, vmath.vector3( 0, 5000 * self.thrust, 0)),
	-- 	position = go.get_world_position()
	-- })

	local velocity = go.get(body, "linear_velocity")
	if self.thrust then
		go.set(body, "linear_velocity", velocity + (vmath.rotate(rotation, vmath.vector3( 0, self.power * self.thrust, 0))))
	end
	--print(vmath.length(velocity))
	
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	if action_id == hash("thrust") then
		if action.pressed then
			self.thrust = 1
			particlefx.play("#thruster")
			msg.post("#tailight", "enable")
		elseif action.released then
			self.thrust = 0
			particlefx.stop("#thruster")
			msg.post("#tailight", "disable")
		end
	end


	if action_id == hash("left") then
		if action.pressed then
			self.rotation_direction.x = -4
		elseif action.released then
			self.rotation_direction.x = 0
		end
	elseif action_id == hash("right") then
		if action.pressed then
			self.rotation_direction.x = 4
		elseif action.released then
			self.rotation_direction.x = 0
		end
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
